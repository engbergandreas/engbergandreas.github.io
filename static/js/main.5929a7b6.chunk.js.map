{"version":3,"sources":["pages/header.js","pages/footer.js","pages/projects.js","pages/portfolio.js","pages/about.js","pages/home.js","pages/error.js","Components/BackToProjects.js","Components/ProjectTitle.js","Components/ProjectImage.js","Components/DemoCodeInfo.js","projects/cloth_simulation.js","Components/ProjectImages.js","Components/DemoVideo.js","Components/QuickInfo.js","projects/table_raid.js","projects/matkoma.js","projects/sound_flight.js","projects/legionen.js","projects/setfinder.js","Components/ReferenceLink.js","Components/MainContent.js","projects/procedural_terrain.js","projects/procedural_trees.js","Components/YoutubeEmbed.js","projects/color_my_world.js","projects/face_recognition.js","projects/global_illumination.js","projects/bob_ross.js","App.js","serviceWorker.js","Components/ScrollToTop.js","index.js"],"names":["RightHalfHeader","styled","div","StyledHeader","header","Header","className","exact","activeClassName","to","StyledFooter","footer","Footer","href","target","rel","src","alt","StyledMain","CategoriesWrapper","ProjectsWrapper","CATEGORIES","ProjectContainer","StyledImg","img","StyledProjectTitle","ProjectThumbnail","title","backgroundImg","Projects","selectedCat","onClickFunction","projects","match","useRouteMatch","DisplayCategories","map","category","index","key","onClick","project","style","id","url","backgroundURL","portfolio","about","Banner","Portrait","IntroName","h1","Info","Wrapper","home","error","Container","props","isTop","Button","BackToProjects","top","StyledH1","ProjectTitle","subtitle","StyledFigure","figure","Image","Caption","figcaption","ProjectImage","source","description","DemoCodeLinks","demo","code","as","ClothSimulation","textAlign","MulitpleImages","ProjectImages","source1","source2","description1","description2","video","DemoVideo","InfoWrapper","StyledUL","ul","QuickInfo","typeinfo","type","item","ExampleProject","MatKoma","SoundFlight","Legionen","SetFinder","StyledLink","a","ReferenceLink","reference","text","MainContent","content","ProceduralTerrain","ProceduralTrees","ResponsiveVideo","YoutubeEmbed","embedID","width","height","frameBorder","allow","allowFullScreen","ColorMyWorld","FaceRecognition","GlobalIllumination","BobRoss","App","useState","selectedCategory","setSelectedCategory","projectsToShow","setProjectsToShow","path","component","Portfolio","cloth","raid","matkoma","soundflight","legionen","legofinder","proceduralTerrain","proceduralTrees","filteredProjects","filter","categories","includes","toLowerCase","About","Home","Error","Boolean","window","location","hostname","ScrollToTop","pathname","useLocation","useEffect","scrollTo","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.5929a7b6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components'\r\n\r\nconst RightHalfHeader = styled.div`\r\ndisplay: flex;\r\njustify-content: space-evenly;\r\nwidth: 375px;\r\n`\r\nconst StyledHeader = styled.header`\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n`\r\nfunction Header() {\r\n    return (\r\n        <StyledHeader>\r\n            <nav className=\"wrapper\">\r\n                <NavLink exact activeClassName=\"activePage\" className=\"wrapperChild\" to=\"/\">Home</NavLink >\r\n                <RightHalfHeader>\r\n                    {/*<NavLink activeClassName=\"activePage\" className=\"wrapperChild\" to=\"/portfolio\">Portfolio</NavLink>*/}\r\n                    <NavLink activeClassName=\"activePage\" className=\"wrapperChild\" to=\"/projects\">Projects</NavLink>\r\n                    {/*<NavLink activeClassName=\"activePage\" className=\"wrapperChild\" to=\"/about\">About</NavLink>*/}\r\n                </RightHalfHeader>\r\n            </nav>\r\n        </StyledHeader>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledFooter = styled.footer `\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 100%;\r\n    color: #3C403D;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background: #fff;\r\n    display: flex;\r\n    height: 10vh;\r\n    min-height: var(--gap);\r\n    font-size: 1.5em;\r\n\r\n    & a {\r\n        margin: 0 15px;\r\n    }\r\n`\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <StyledFooter>\r\n            <a href=\"https://www.linkedin.com/in/andreas-engberg/\" target=\"_blank\" rel=\"noopener noreferrer\" ><img src=\"/images/linkedin.png\" alt=\"Linked in\"></img></a>\r\n            <a href=\"https://github.com/engbergandreas\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"/images/GitHub.png\" alt=\"GitHub profile\"></img></a>\r\n            <a href=\"mailto:adde.engberg@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"/images/mail.png\" alt=\"Mail\"></img></a>\r\n        </StyledFooter>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\nimport { Link, Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledMain = styled.div `\r\n    /*background: linear-gradient(90deg, #79938d, #496368);*/\r\n    background: #121212;\r\n    min-height: 89vh;\r\n    padding-top: var(--gap);\r\n`;\r\n\r\nconst CategoriesWrapper = styled.div `\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    padding: 50px 0;\r\n    width: 90%;\r\n    margin: auto;\r\n`;\r\nconst ProjectsWrapper = styled.div `\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(375px, 1fr));\r\n    gap: 15px;\r\n    padding-bottom: 50px;   \r\n    width: 90%;\r\n    margin: 0 auto;\r\n\r\n`;\r\n\r\nconst CATEGORIES = ['SHOW ALL', 'GAMES', 'COMPUTER GRAPHICS', 'PROGRAMMING', 'WEBB'];\r\n\r\nfunction Projects({ selectedCat, onClickFunction, projects }) {\r\n    let match = useRouteMatch();\r\n\r\n    function DisplayCategories() {\r\n        return (\r\n            <CategoriesWrapper>\r\n                {\r\n                    CATEGORIES.map((category, index) => (\r\n                        <button key={index} className={category === selectedCat ? 'activeCategory category' : 'category buttonAnimation'}\r\n                            onClick={() => onClickFunction(category)}\r\n                        >\r\n                            {category}\r\n                        </button >\r\n                    ))\r\n                }\r\n            </CategoriesWrapper >\r\n        );\r\n    }\r\n\r\n    return (\r\n        <StyledMain>\r\n            <DisplayCategories />\r\n            <ProjectsWrapper>\r\n                {projects.map(project => (\r\n                    //Creates a relative link to all the different projects using its ID\r\n                    <Link className=\"\" style={{/*padding: \"5px\", background: \"white\"*/}} key={project.id} to={`${match.url}/${project.id}`}>\r\n                        <ProjectThumbnail title={project.title} backgroundImg={project.backgroundURL} />\r\n                    </Link>\r\n                ))}\r\n            </ProjectsWrapper>\r\n        </StyledMain>\r\n    );\r\n}\r\n\r\n\r\nconst ProjectContainer = styled.div `\r\n    background: white;\r\n    overflow: hidden;\r\n    position: relative;\r\n\r\n\r\n    &:before {\r\n        content: \"\";\r\n        padding: 0 0px 60% 0; /* Adjust height of the cards */ \r\n        display: block;\r\n    }\r\n`; \r\n\r\nconst StyledImg = styled.img `\r\n    background: white;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n`;\r\n\r\nconst StyledProjectTitle = styled.div `\r\n    background: #07145200;\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    color: white;\r\n    font-size: 2.5em;\r\n    font-weight: 600;\r\n    transition: 0.4s ease;\r\n    opacity: 0;\r\n\r\n    &:hover {\r\n        background: #0714528c;\r\n        background: #00000061;\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nfunction ProjectThumbnail({ title, backgroundImg }) {\r\n    let style = { backgroundImage: `url(${backgroundImg})`, backgroundColor: '#ececec' }\r\n    //<img src={require('../images/placeholder250.png')}></img>\r\n    return (\r\n        <ProjectContainer>\r\n            <StyledImg src={backgroundImg}></StyledImg>\r\n            <StyledProjectTitle><span>{title}</span></StyledProjectTitle>\r\n        </ProjectContainer>\r\n    );\r\n}\r\n\r\nexport default Projects;\r\n\r\n","import React from 'react'\r\n\r\nfunction portfolio() {\r\n    return (\r\n        <h1>\r\n            From portfolio\r\n        </h1>\r\n    );\r\n}\r\n\r\nexport default portfolio;","import React from 'react'\r\n\r\nfunction about() {\r\n    return (\r\n        <h1>\r\n            From about\r\n        </h1>\r\n    );\r\n}\r\n\r\nexport default about;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Projects from './projects'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst StyledMain = styled.div`\r\n    padding-top: var(--gap);\r\n`;\r\nconst Banner = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 25px 0 0 100px;\r\n`;\r\nconst Portrait = styled.img`\r\n    height: 300px; \r\n    width: 300px;\r\n    bakground: white;\r\n    border-radius: 50%;\r\n`;\r\n\r\nconst IntroName = styled.h1`\r\n    margin: 0;\r\n    font-size: 2.8em;\r\n    letter-spacing: -2px;\r\n    line-height: 55px;\r\n`;\r\n\r\nconst Info = styled.div`\r\n    width: 50%;\r\n    margin-top: 50px;\r\n    margin-left: 450px;\r\n`;\r\nconst Wrapper = styled.div`\r\n    margin: 0;\r\n    margin-left: 50px;\r\n    text-align: center;\r\n`\r\n\r\nfunction home() {\r\n    return (\r\n        <StyledMain className=\"mainContent\">\r\n            <Banner>\r\n                <Portrait src=\"../images/me.png\"></Portrait>\r\n                <Wrapper>\r\n                    <IntroName>Andreas Engberg</IntroName>\r\n                    <div>Rolig * Skojig * Kul</div>\r\n                </Wrapper>\r\n            </Banner>\r\n            <Info>\r\n                <p>\r\n                    Hi! I am Andreas Engberg and currently studying my 4:th year in  MSc in Media Technology and Engineering at Linköpings University.\r\n                    I am passionate coder with extra love for computer graphic, image processing & analysis and SFX.\r\n                    <br></br>\r\n                    I'm focusing my master profile towards computer graphics techniques, machine learning & AI. You can find the complete \r\n                    list of all courses on my linked in profile. \r\n                </p>\r\n                <p>\r\n                   Here you will find some of the projects I have worked on during my time at Linköpings University\r\n                    as well as some of my personal projects during my spare time.\r\n                    This site is very much a work in progress and Im continuously updating the projects. \r\n                </p>\r\n                <p>\r\n                    You can checkout my projects <NavLink to=\"/projects\"> here</NavLink>\r\n                </p>\r\n            </Info>\r\n        </StyledMain>\r\n    );\r\n}\r\n\r\nexport default home;","import React from 'react'\r\n\r\nfunction error() {\r\n    return (\r\n        <h1>\r\n            Whoopise, it seems that url does not exists!\r\n        </h1>\r\n    );\r\n}\r\n\r\nexport default error;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div `\r\ndisplay: flex;\r\njustify-content: ${props => props.isTop ? \"start\" : \"center\"};\r\nmargin: 15px 0;\r\n`\r\n\r\nconst Button = styled.div `\r\nborder: 2px solid #3C403D;\r\nheight: 50px;\r\nwidth: 200px;\r\nmargin: ${props => props.isTop ? \"0 0 0 15px\" : \"0 \"};\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\ncolor: #3C403D;\r\nfont-size: larger;\r\nfont-weight: 600;\r\n\r\n&:hover {\r\n    background: #f6f8fa;\r\n}\r\n`\r\n\r\nfunction BackToProjects({top = false}) {\r\n    return (\r\n        <Container isTop={top}>\r\n            <Link to=\"/projects\"><Button isTop={top}>Back to all projects</Button></Link>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default BackToProjects","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledH1 = styled.h1 `\r\n    font-size: 3.5em;\r\n    line-height: 0.9em;\r\n` \r\n\r\nfunction ProjectTitle({title, subtitle}) {\r\n    return (\r\n        <div className=\"projectTitleInfo\">\r\n            <StyledH1> {title} </StyledH1>\r\n            <h2> {subtitle} </h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectTitle;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledFigure = styled.figure `\r\n    display: table;\r\n    margin: 0 auto;\r\n`\r\n\r\nconst Image = styled.img `\r\n    max-width: 100%;\r\n    display: block;\r\n    margin: 0 auto;\r\n` \r\nconst Caption = styled.figcaption `\r\n    display: table-caption;\r\n    caption-side: bottom;\r\n    color: gray;\r\n    font-size: small;\r\n`\r\n\r\nfunction ProjectImage({source, description}) {\r\n    \r\n    return (\r\n        <StyledFigure>\r\n        <Image src={source} alt={description} /> \r\n        <Caption>{description}</Caption>\r\n        </StyledFigure>\r\n    )\r\n}\r\n\r\nexport default ProjectImage","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\njustify-content: center;\r\nmargin: 15px 0;\r\n`\r\n\r\nconst Button = styled.div`\r\nborder: 2px solid #3C403D;\r\n/*border: 1px solid #e1e4e8;*/\r\nheight: 60px;\r\nwidth: 110px;\r\nmargin: 0 5px;\r\ndisplay: inline-flex;\r\njustify-content: center;\r\nalign-items: center;\r\ncolor: #3C403D;\r\nfont-size: larger;\r\nfont-weight: 600;\r\n\r\n&:hover {\r\n    background: #f6f8fa;\r\n}\r\n`\r\n\r\n\r\nfunction DemoCodeLinks({ demo, code }) {\r\n    if (demo && code) {\r\n        return (\r\n            <Container>\r\n                <Button as=\"a\" href={demo} target=\"_blank\">Demo</Button>\r\n                <Button as=\"a\" href={code} target=\"_blank\">Code</Button>\r\n            </Container>\r\n        )\r\n    }\r\n    else if (demo) {\r\n        return (\r\n            <Container>\r\n                <Button as=\"a\" href={demo} target=\"_blank\">Demo</Button>\r\n            </Container>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Container>\r\n                <Button as=\"a\" href={code} target=\"_blank\">Code</Button>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DemoCodeLinks","import React from 'react'\r\nimport BackButton from '../Components/BackToProjects'\r\nimport ProjectTitle from '../Components/ProjectTitle'\r\nimport ProjectImage from '../Components/ProjectImage'\r\nimport DemoCodeLinks from '../Components/DemoCodeInfo'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledMain = styled.div `\r\n    padding-top: var(--gap);\r\n`\r\n\r\nfunction ClothSimulation() {\r\n    return (\r\n        <StyledMain className={\"mainContent\"}>\r\n            <BackButton top />\r\n            <ProjectTitle title={\"CLOTH SIMULATION\"} subtitle={\"University project created spring 2021\"} />\r\n\r\n            <div className=\"projectInfo\">\r\n                <h2>SUMMARY</h2>\r\n                <p>\r\n                    The cloth simulation was a project done in the course 'Modeling Course (TNM085)' at Linköpings University during 6½ weeks by a group of 4 people.\r\n                    The purpose was to simulate a physically based model of their own choosing.\r\n                    The model was built using a mass-spring system in a grid like fashion.\r\n                    The acting forces are formulated for each mass and Eulers method and Runge Kutta 4 are used to simulate the cloths movement.\r\n                    In the project we first implemented a simplified 2D version in Matlab and a Simulink model was developed.\r\n                    Later on the system was further implemented in JavaScript using P5.js and WebGL for visualization and texturing, Perlin noise was used to simulate the wind\r\n                    acting on the cloth.\r\n                </p>\r\n\r\n                <ProjectImage source={'../images/cloth/clothsystem.png'} description='' />\r\n                <DemoCodeLinks code=\"https://github.com/engbergandreas/cloth-simulation\" demo=\"https://engbergandreas.github.io/cloth-simulation/\"></DemoCodeLinks>\r\n                <h1 style={{ textAlign: 'center' }}>Implementation</h1>\r\n\r\n                <h2>Model</h2>\r\n                <p>\r\n                    Our model was built as a m x n grid of particles with a mass which are connected by springs and dampers according to the image below. \r\n                    The idea comes from Xavier Provot using structural, shear and flexion springs.\r\n                    The structural springs rejects compression and traction, shear springs helps maintain structure and the flexion springs\r\n                    resists unnatural folding.\r\n                </p>\r\n\r\n                <ProjectImage source='../images/cloth/mass-spring-system.png' description='Graphical presentation of the mass-spring system' />\r\n\r\n                <p>\r\n                    Every frame we study the particles position and calculate the force on each particle for the next frame.\r\n                    The force on a single particle is controlled by Newtons second law of motion, it consists of both internal and external forces. \r\n                    The internal forces are: spring force according to Hookes law and a linear damping force,\r\n                    while the external force consist of gravity and a linear wind force using perlin noise to simulate random movement that affect the cloth. \r\n                </p>\r\n\r\n                <p> \r\n                    We began by implementing a simulink model and ran some simulations in MATLAB to make sure that our model was built correctly.\r\n                    These simulation were made using a simplified model with less springs and particles compared to the final version. \r\n                    Using MATLAB plots and comparing them to the plots from simulink gave us confidence that our model was infact correct. \r\n                </p>\r\n                <p>            \r\n                    We then began the process of visualizing our model using P5.js. We start by drawing a grid of particles and connected them to their neighbors. \r\n                    Then we had to redo the physics implementation we had previously done in MATLAB. \r\n                    However here we encountered some problems when calculating these cloth forces. \r\n                    What we did first was incorrectly calculating each particle current force and applied it to the particle in the same loop, this gave us very wierd results \r\n                    since the neighboring particles were now being calculated using both old and new force data.\r\n                    To overcome this we first calculate the current force of every particle using the data from the previous frame, then we loop over every particle again\r\n                    this time calculating the acceleration, velocity and position for the next frame. \r\n                    \r\n                </p>\r\n                <p>\r\n                    We implemented a functional UI for the user to change the parameters of the cloth to see how they influence the simulation.\r\n                    These include changing the time step of the integration method, weight of the particles, the spring constants and damping constant.\r\n                    Furthermore we gave the option of choosing integration methods as a way to compare Euler and RK4 method. \r\n                    Due to Euler integration being a very simple method, there are some values that are unstable using this method compared to RK4 (Note that there are values that make RK4 unstable as well).\r\n                    This also gave the need for a reset button. \r\n                    <br></br>\r\n                     \r\n                    Finally we added a texture to our cloth. \r\n                    Using the particles placement in the grid as their vertex position we create a triangle strip using the neighboring particles.\r\n                    These are then UV mapped onto our texture. \r\n                </p>\r\n\r\n                <ProjectImage source={'../images/cloth/textureflag.png'} description='' />\r\n                <br></br>\r\n\r\n                <ProjectImage source={'../images/cloth/textureflag2.png'} description='' />\r\n                <BackButton />\r\n            </div>\r\n        </StyledMain>\r\n\r\n    );\r\n}\r\n\r\nexport default ClothSimulation;","import React from 'react'\r\nimport ProjectImage from './ProjectImage'\r\nimport styled from 'styled-components'\r\n\r\nconst MulitpleImages  = styled.div `\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: baseline;\r\n\r\n    & figure {\r\n        //margin: 15px;\r\n        margin: 0 5px;\r\n        max-width: 49%;\r\n\r\n    }\r\n\r\n    @media (max-width: 1500px) {\r\n        & figure {\r\n            max-width: 100%;\r\n        }\r\n    }\r\n`\r\n\r\nfunction ProjectImages({source1, source2, description1, description2}) {\r\n    return (\r\n        <MulitpleImages >\r\n            <ProjectImage source={source1} description={description1}/>\r\n            <ProjectImage source={source2} description={description2}/>\r\n        </MulitpleImages>\r\n\r\n    )\r\n}\r\n\r\nexport default ProjectImages","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledVideo = styled.video`\r\n    width: 100%;\r\n    height: auto;\r\n\r\n`\r\n\r\nfunction DemoVideo({ source, videotype }) {\r\n\r\n    return (\r\n        <StyledVideo controls>\r\n            <source src={source} type={videotype} />\r\n        </StyledVideo>\r\n    )\r\n}\r\n\r\nexport default DemoVideo","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst InfoWrapper = styled.div`\r\n    position: absolute;\r\n    left: 0;\r\n    font-style: italic;\r\n    padding: 25px;\r\n`\r\nconst StyledUL = styled.ul`\r\n    margin: 0;\r\n    padding: 0;\r\n`\r\n\r\nfunction QuickInfo({ typeinfo }) {\r\n    return (\r\n        <InfoWrapper>\r\n            <StyledUL type=\"circle\">\r\n                {\r\n                    typeinfo.map(item => (\r\n                        <li key={item}>{item}</li>\r\n                    ))\r\n                }\r\n            </StyledUL>\r\n        </InfoWrapper>\r\n    )\r\n}\r\n\r\nexport default QuickInfo","import React from 'react'\r\nimport BackButton from '../Components/BackToProjects'\r\nimport ProjectTitle from '../Components/ProjectTitle'\r\nimport ProjectImage from '../Components/ProjectImage'\r\nimport ProjectImages from '../Components/ProjectImages'\r\nimport DemoCodeLinks from '../Components/DemoCodeInfo'\r\nimport styled from 'styled-components'\r\nimport DemoVideo from '../Components/DemoVideo'\r\nimport QuickInfo from '../Components/QuickInfo'\r\n\r\nconst StyledMain = styled.div`\r\n    padding-top: var(--gap);\r\n`\r\n\r\nfunction ExampleProject() {\r\n    return (\r\n        <StyledMain>\r\n            <BackButton top />\r\n            <ProjectTitle title={\"TABLE RAID\"} subtitle={\"Bachelor project created spring 2021\"} />\r\n\r\n            <div className=\"projectInfo\">\r\n                <QuickInfo typeinfo={[\"VR\", \"Multiplayer\", \"Unity\"]}></QuickInfo>\r\n\r\n                <h2>SUMMARY</h2>\r\n                <p>\r\n                    Table Raid is a gesture based VR game created in 'Media Technology - Bachelor Project TNM094' at Linköpings University\r\n                    during 12 weeks by a group of 5 people. The main focus of the course was to create a larger project and gain experience\r\n                    in system development and agile development.\r\n\r\n\r\n                    <br></br>\r\n                    Ill present those parts of the project that I was most involved with which include general game design, VR integration, \r\n                    gesture recognition system, abilities system and the multiplayer aspect.\r\n                    \r\n                </p>\r\n                <h2>Demo</h2>\r\n                {/*<DemoVideo source={'../videos/DemoTableRaid.mp4'} videotype={\"video/mp4\"}></DemoVideo> */}\r\n                <DemoCodeLinks code=\"https://github.com/jonan270/gesture-based-game/tree/Beta2.0\"></DemoCodeLinks>\r\n\r\n                <h3>Game design</h3>\r\n                <ProjectImage source={'../images/table_raid/composite.png'} description={'User performing a gesture and ability.'} />\r\n\r\n                <ProjectImages source1={''} description1={''}\r\n                source2={''} description2={''} />\r\n\r\n                <h3>Gesture recognition</h3>\r\n                <ProjectImage source={'../images/table_raid/gesture_new.PNG'} description={'User performing a gesture.'} />\r\n\r\n                <h3>Abilities system</h3>\r\n\r\n                <h3>Multiplayer</h3>\r\n\r\n\r\n                <BackButton />\r\n            </div>\r\n        </StyledMain>\r\n\r\n    );\r\n}\r\n\r\nexport default ExampleProject;","import React from 'react'\r\nimport BackButton from '../Components/BackToProjects'\r\nimport ProjectTitle from '../Components/ProjectTitle'\r\nimport ProjectImage from '../Components/ProjectImage'\r\nimport ProjectImages from '../Components/ProjectImages'\r\nimport DemoCodeLinks from '../Components/DemoCodeInfo'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledMain = styled.div `\r\n    padding-top: var(--gap);\r\n` \r\n\r\nfunction MatKoma() {\r\n    return (\r\n        <StyledMain>\r\n            <BackButton top/>\r\n            <ProjectTitle title ={\"MATKOMA\"} subtitle={\"University project created fall 2020\"} />\r\n\r\n            <div className=\"projectInfo\">\r\n                <h2>SUMMARY</h2>\r\n\r\n                <DemoCodeLinks code=\"https://github.com/engbergandreas/matkoma\" demo=\"https://3djakob.github.io/matkoma/\"></DemoCodeLinks>\r\n\r\n                <ProjectImage source={'../images/matkoma/overview.png'} description={'Preferences page'} />\r\n\r\n                <BackButton />\r\n            </div>\r\n        </StyledMain>\r\n\r\n    );\r\n}\r\n\r\nexport default MatKoma;","import React from 'react'\r\nimport BackButton from '../Components/BackToProjects'\r\nimport ProjectTitle from '../Components/ProjectTitle'\r\nimport ProjectImage from '../Components/ProjectImage'\r\nimport ProjectImages from '../Components/ProjectImages'\r\nimport DemoCodeLinks from '../Components/DemoCodeInfo'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledMain = styled.div `\r\n    padding-top: var(--gap);\r\n` \r\n\r\nfunction SoundFlight() {\r\n    return (\r\n        <StyledMain>\r\n            <BackButton top/>\r\n            <ProjectTitle title ={\"SOUND FLIGHT\"} subtitle={\"University project created fall 2020\"} />\r\n\r\n            <div className=\"projectInfo\">\r\n                <h2>SUMMARY</h2>\r\n                <p>\r\n                </p>\r\n                <DemoCodeLinks code=\"https://github.com/engbergandreas/SoundFlight\"></DemoCodeLinks>\r\n\r\n\r\n                <BackButton />\r\n            </div>\r\n        </StyledMain>\r\n\r\n    );\r\n}\r\n\r\nexport default SoundFlight;","import React from 'react'\r\nimport BackButton from '../Components/BackToProjects'\r\nimport ProjectTitle from '../Components/ProjectTitle'\r\nimport ProjectImage from '../Components/ProjectImage'\r\nimport ProjectImages from '../Components/ProjectImages'\r\nimport DemoCodeLinks from '../Components/DemoCodeInfo'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledMain = styled.div `\r\n    padding-top: var(--gap);\r\n` \r\n\r\nfunction Legionen() {\r\n    return (\r\n        <StyledMain>\r\n            <BackButton top/>\r\n            <ProjectTitle title ={\"LEGIONEN - THE GAME\"} subtitle={\"Individual project created 2019\"} />\r\n\r\n            <div className=\"projectInfo\">\r\n                <h2>SUMMARY</h2>\r\n                <p>\r\n                </p>\r\n                <DemoCodeLinks code=\"https://github.com/engbergandreas/Legionen-Webbsida\" demo=\"https://legionen.nu/arkiv/2019/\"></DemoCodeLinks>\r\n\r\n                <BackButton />\r\n            </div>\r\n        </StyledMain>\r\n\r\n    );\r\n}\r\n\r\nexport default Legionen;","import React from 'react'\r\nimport BackButton from '../Components/BackToProjects'\r\nimport ProjectTitle from '../Components/ProjectTitle'\r\nimport ProjectImage from '../Components/ProjectImage'\r\nimport ProjectImages from '../Components/ProjectImages'\r\nimport DemoCodeLinks from '../Components/DemoCodeInfo'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledMain = styled.div `\r\n    padding-top: var(--gap);\r\n` \r\n\r\nfunction SetFinder() {\r\n    return (\r\n        <StyledMain>\r\n            <BackButton top/>\r\n            <ProjectTitle title ={\"SETFINDER\"} subtitle={\"some info about creation date? or other small title\"} />\r\n\r\n            <div className=\"projectInfo\">\r\n                <h2>SUMMARY</h2>\r\n                <p>\r\n\r\n                </p>\r\n                \r\n                <DemoCodeLinks code=\"https://github.com/engbergandreas/SetFinder\" demo=\"http://www.student.itn.liu.se/~anden561/Avslutade%20kurser/TNMK30%20Projekt%202019/\"></DemoCodeLinks>\r\n\r\n\r\n                <BackButton />\r\n            </div>\r\n        </StyledMain>\r\n\r\n    );\r\n}\r\n\r\nexport default SetFinder;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledLink = styled.a`\r\n    color: #000;\r\n    border-bottom: 1px solid black;\r\n`\r\n\r\nfunction ReferenceLink({ reference, text}) {\r\n\r\n    return (\r\n        <StyledLink href={reference}>\r\n            {text}\r\n        </StyledLink>\r\n    )\r\n}\r\n\r\nexport default ReferenceLink","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledMain = styled.div `\r\n    /*background: linear-gradient(90deg, #79938d, #496368);*/\r\n    background: #121212;\r\n    min-height: 89vh;\r\n    padding-top: var(--gap);\r\n    padding-bottom: var(--gap);\r\n    color: white;\r\n    \r\n\r\n    & a {\r\n        color: white;\r\n        border-color: white;\r\n    }\r\n`\r\n\r\nfunction MainContent({content}) {\r\n\r\n    return (\r\n        <StyledMain>\r\n            {content}\r\n        </StyledMain>\r\n    )\r\n}\r\n\r\nexport default MainContent","import React from 'react'\r\nimport BackButton from '../Components/BackToProjects'\r\nimport ProjectTitle from '../Components/ProjectTitle'\r\nimport ProjectImage from '../Components/ProjectImage'\r\nimport ProjectImages from '../Components/ProjectImages'\r\nimport DemoCodeLinks from '../Components/DemoCodeInfo'\r\nimport styled from 'styled-components'\r\nimport ReferenceLink from '../Components/ReferenceLink'\r\nimport MainContent from '../Components/MainContent'\r\n\r\nconst StyledMain = styled.div`\r\n    \r\n`\r\n\r\nfunction ProceduralTerrain() {\r\n    return (\r\n        <MainContent content={\r\n            <StyledMain className={\"\"}>\r\n                <BackButton top />\r\n                <ProjectTitle title={\"PROCEDURAL GENERATED TERRAIN\"} subtitle={\"University project created winter 2021\"} />\r\n\r\n                <div className=\"projectInfo\">\r\n                    <h2>SUMMARY</h2>\r\n                    <p>\r\n                        In this project we created an endless procedurally generetared terrain in OpenGL using \r\n                        multiple perlin noise layers (FBM) to create an interesting environment.\r\n                        We implemented techniques such as frustum culling,\r\n                        discrete level of detal (LOD) and CPU threading to improve real time rendering.\r\n                        This project was part of the course Advanced Game Programming (TSBK03)\r\n                        at Linköpings University and was created by me and <ReferenceLink reference={\"https://github.com/mansaronsson\"} text={\"Måns Arronsson\"}></ReferenceLink> \r\n\r\n                    </p>\r\n\r\n                    <ProjectImage source={'../images/procedural_terrain/result.png'} description='' />\r\n                    <DemoCodeLinks code=\"https://github.com/engbergandreas/ProceduralGeneratedTerrain\"></DemoCodeLinks>\r\n\r\n                    <h1 style={{ textAlign: 'center' }}>Implementation</h1>\r\n\r\n                    <h2>Terrain</h2>\r\n\r\n                    <p>\r\n                    The endless terrain was created as an unevenly sized grid of equally large chunks.\r\n                    Each chunk consisted of a mesh of vertices with equal spacing containing the terrain data.\r\n                    We define the triangle strips as shown in the image below. \r\n                    We use a skirt at the end of each chunk to hide artifacts between neighboring chunks of different LOD.\r\n                    The height of any given vertex is computed using Fractal Brownian Motion (FBM), we used six octaves \r\n                    of Perlin Noise where each octave doubles the frequency and halves the amplitude.\r\n                    </p>\r\n\r\n                    <ProjectImage source={'../images/procedural_terrain/grid.png'} description={'Underlying terrain structure'}></ProjectImage>\r\n\r\n                    <h3>Normals</h3>\r\n                    <p>\r\n                        The normal at each vertex is computed by considering all connected triangles.\r\n                        For non-edge vertices we know all neighboring vertices lie in the same terrain chunk. \r\n                        However, for edge vertices there can be up to three vertices in a neighbor chunk. \r\n                        Instead of doing an expensive search for those vertex indices we opted to generate fake vertices \r\n                        for those missing like shown in the left figure below. This is an important problem to solve\r\n                        as we must create smooth surface normals between neighboring chunks.  \r\n                    </p>\r\n                    <ProjectImages source1={'../images/procedural_terrain/fakevertex.png'} \r\n                    description1={'Fake vertices are generated to compute the correct normal for yellow vertex.'}\r\n                    source2={'../images/procedural_terrain/normalcomparision.png'}\r\n                    description2={'Comparision showing the artifacts that arise when not computing edge normals correctly.'}\r\n                    ></ProjectImages>\r\n\r\n                    <h3>Frustum culling</h3>\r\n                    <ProjectImage source={'../images/procedural_terrain/bounding_box.PNG'} \r\n                    description={'Result from culling terrain, chunks outside camera frustum (white lines) are not drawn.'} />\r\n                    \r\n\r\n\r\n                    <h3>Discrete level of detail</h3>\r\n                    <ProjectImage source={'../images/procedural_terrain/lod.PNG'} \r\n                    description={'LOD visualized by color, green most detailed to red least detailed with respect to distance from camera.'} />\r\n\r\n\r\n\r\n                    <h3>Multi-threading</h3>\r\n\r\n                    <BackButton />\r\n                </div>\r\n            </StyledMain>\r\n        }>\r\n        </MainContent>\r\n    );\r\n}\r\n\r\nexport default ProceduralTerrain;","import React from 'react'\r\nimport BackButton from '../Components/BackToProjects'\r\nimport ProjectTitle from '../Components/ProjectTitle'\r\nimport ProjectImage from '../Components/ProjectImage'\r\nimport ProjectImages from '../Components/ProjectImages'\r\nimport DemoCodeLinks from '../Components/DemoCodeInfo'\r\nimport styled from 'styled-components'\r\nimport ReferenceLink from '../Components/ReferenceLink'\r\n\r\nconst StyledMain = styled.div`\r\n    padding-top: var(--gap);\r\n`\r\n\r\nfunction ProceduralTrees() {\r\n    return (\r\n        <StyledMain>\r\n            <BackButton top />\r\n            <ProjectTitle title={\"PROCEDURAL GENERATED TREES\"} subtitle={\"Individual university project created fall 2021\"} />\r\n\r\n            <div className=\"projectInfo\">\r\n                <h2>SUMMARY</h2>\r\n                <p>Here is some great info about this project and perhaps a small summary of what the project\r\n                    is all about. After this perhaps an image or two would be a good idea. I will also need\r\n                    to come up with some more info so that this paragrahp actually has some length.\r\n                </p>\r\n                <ProjectImage source={'../images/procedural_trees/result.png'} description={'Procedural trees generated'} />\r\n                <DemoCodeLinks code=\"https://github.com/engbergandreas/ProceduralGeneratedTrees\"></DemoCodeLinks>\r\n\r\n                <h3>Procedural biomes</h3>\r\n                <ProjectImages source1={'../images/procedural_trees/heatmap.png'} description1={'Heat map visualized over terrain'}\r\n                source2={'../images/procedural_trees/wetmap.png'} description2={'Moisture map visualized over terrian'} />\r\n\r\n                <h3>Tree generation</h3>\r\n                \r\n                <h3>Procedural tree placement</h3>\r\n                <ProjectImage source={'../images/procedural_trees/possion.png'} description={'Possion disk sampling'} />\r\n                <ProjectImages source1={'../images/procedural_trees/jitter.png'} description1={'Jittered grid'}\r\n                source2={'../images/procedural_trees/random.png'} description2={'Random points generated'} />\r\n                <p>Images taken from <ReferenceLink reference={'http://devmag.org.za/2009/05/03/poisson-disk-sampling/'} text={'Dev.Mag'} />\r\n                \r\n                </p>\r\n\r\n                <ProjectImage source={'../images/procedural_trees/validation.png'} description={'Tree validation of the terrain'} />\r\n\r\n\r\n                \r\n                <BackButton />\r\n            </div>\r\n        </StyledMain>\r\n\r\n    );\r\n}\r\n\r\nexport default ProceduralTrees;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst ResponsiveVideo = styled.div`\r\n    overflow: hidden;\r\n    padding-bottom: 56.25%;\r\n    position: relative;\r\n    height: 0;\r\n    margin: 16px 0;\r\n    \r\n    & iframe {\r\n        left: 0;\r\n        top: 0;\r\n        height: 100%;\r\n        width: 100%;\r\n        position: absolute;\r\n    }\r\n\r\n`\r\n\r\nfunction YoutubeEmbed({ embedID }) {\r\n\r\n    return (\r\n        <ResponsiveVideo>\r\n            <iframe\r\n            width=\"853\" \r\n            height=\"480\" \r\n            src={`https://www.youtube.com/embed/${embedID}`}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n            title=\"Embedded youtube\"\r\n            />\r\n\r\n        </ResponsiveVideo>\r\n    )\r\n}\r\n\r\nexport default YoutubeEmbed","import React from 'react'\r\nimport BackButton from '../Components/BackToProjects'\r\nimport ProjectTitle from '../Components/ProjectTitle'\r\nimport ProjectImage from '../Components/ProjectImage'\r\nimport ProjectImages from '../Components/ProjectImages'\r\nimport DemoCodeLinks from '../Components/DemoCodeInfo'\r\nimport styled from 'styled-components'\r\nimport YoutubeEmbed from '../Components/YoutubeEmbed'\r\n\r\nconst StyledMain = styled.div`\r\n    padding-top: var(--gap);\r\n`\r\n\r\nfunction ColorMyWorld() {\r\n    return (\r\n        <StyledMain>\r\n            <BackButton top />\r\n            <ProjectTitle title={\"COLOR MY WORLD\"} subtitle={\"Individual university project created fall 2021\"} />\r\n\r\n            <div className=\"projectInfo\">\r\n                <h2>SUMMARY</h2>\r\n                <p>\r\n                    \r\n                </p>\r\n                <YoutubeEmbed embedID={\"_tLCKDe1jJI\"} ></YoutubeEmbed>\r\n                <DemoCodeLinks code=\"https://github.com/engbergandreas/ColorMyWorld2D\"></DemoCodeLinks>\r\n\r\n\r\n                <BackButton />\r\n            </div>\r\n        </StyledMain>\r\n\r\n    );\r\n}\r\n\r\nexport default ColorMyWorld;","import React from 'react'\r\nimport BackButton from '../Components/BackToProjects'\r\nimport ProjectTitle from '../Components/ProjectTitle'\r\nimport ProjectImage from '../Components/ProjectImage'\r\nimport ProjectImages from '../Components/ProjectImages'\r\nimport DemoCodeLinks from '../Components/DemoCodeInfo'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledMain = styled.div`\r\n    padding-top: var(--gap);\r\n`\r\n\r\nfunction FaceRecognition() {\r\n    return (\r\n        <StyledMain>\r\n            <BackButton top />\r\n            <ProjectTitle title={\"FACE RECOGNITION\"} subtitle={\"University project created fall 2021\"} />\r\n\r\n            <div className=\"projectInfo\">\r\n                <h2>SUMMARY</h2>\r\n                <p>\r\n\r\n                </p>\r\n\r\n                <DemoCodeLinks code=\"https://github.com/engbergandreas/FacialRecognition\"></DemoCodeLinks>\r\n\r\n\r\n                <h3>Finding eyes</h3>\r\n                <h3>Fisherfaces</h3>\r\n                <ProjectImage source={'../images/face_recognition/fisherfaces.png'} description={''}/>\r\n                <BackButton />\r\n            </div>\r\n        </StyledMain>\r\n\r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react'\r\nimport BackButton from '../Components/BackToProjects'\r\nimport ProjectTitle from '../Components/ProjectTitle'\r\nimport ProjectImage from '../Components/ProjectImage'\r\nimport ProjectImages from '../Components/ProjectImages'\r\nimport DemoCodeLinks from '../Components/DemoCodeInfo'\r\nimport styled from 'styled-components'\r\nimport 'katex/dist/katex.min.css'\r\nimport { InlineMath, BlockMath } from 'react-katex'\r\n\r\nconst StyledMain = styled.div`\r\n    padding-top: var(--gap);\r\n`\r\n\r\nfunction GlobalIllumination() {\r\n    return (\r\n        <StyledMain>\r\n            <BackButton top />\r\n            <ProjectTitle title={\"GLOBAL ILLUMINATION\"} subtitle={\"University project created fall 2021\"} />\r\n            <BlockMath>{\" L(x \\\\leftarrow \\\\omega) = L_{e}(x \\\\leftarrow \\\\omega) + \\\\int_{\\\\omega_{1}} f_{r}(x_{1}, -\\\\omega,\\\\omega_{1}) L(x_{1} \\\\leftarrow \\\\omega_{1})cos(\\\\theta_{1})d\\\\omega_{1}\"}</BlockMath>\r\n\r\n            <div className=\"projectInfo\">\r\n                <h2>SUMMARY</h2>\r\n                <p>\r\n                    \r\n                    <InlineMath>{\"\\\\int_0^2 + 02\"}</InlineMath>\r\n                    \r\n                </p>\r\n                <ProjectImage source={'../images/global_illumination/result.bmp'} description={''} />\r\n                <DemoCodeLinks code=\"https://github.com/engbergandreas/RayTracer\"></DemoCodeLinks>\r\n                \r\n                <h3>The scene</h3>\r\n                <h3>Intersection with objects</h3>\r\n                <h3>Reflection</h3>\r\n                <h3>Ray tree</h3>\r\n                <BackButton />\r\n            </div>\r\n        </StyledMain>\r\n\r\n    );\r\n}\r\n\r\nexport default GlobalIllumination;","import React from 'react'\r\nimport BackButton from '../Components/BackToProjects'\r\nimport ProjectTitle from '../Components/ProjectTitle'\r\nimport ProjectImage from '../Components/ProjectImage'\r\nimport ProjectImages from '../Components/ProjectImages'\r\nimport DemoCodeLinks from '../Components/DemoCodeInfo'\r\nimport styled from 'styled-components'\r\nimport YoutubeEmbed from '../Components/YoutubeEmbed'\r\n\r\nconst StyledMain = styled.div`\r\n    padding-top: var(--gap);\r\n`\r\n\r\nfunction BobRoss() {\r\n    return (\r\n        <StyledMain>\r\n            <BackButton top />\r\n            <ProjectTitle title={\"3D PAINTING - BOB ROSS\"} subtitle={\"University project created spring 2020\"} />\r\n\r\n            <div className=\"projectInfo\">\r\n                <h2>SUMMARY</h2>\r\n                <p>\r\n                    The Bob Ross 3D painting was a 5-man group project made in Blender for ththe course '3-D Computer Graphics' (TNM061). In this project we were to explore \r\n                    different techniques in computer graphics and could freely choose what to do. We decided to make a 3D rendering of one of Bob Ross famous paintings. \r\n                    We split the scene into smaller components where each and everyone was responsible for modelling and texturing their respective parts. I created the left\r\n                    most tree and the water. This was the first time I worked with 3D modelling and Blender. \r\n                    \r\n                </p>\r\n                <YoutubeEmbed embedID={\"W2x3ZlnKtjg\"}></YoutubeEmbed>\r\n                <h3>Tree</h3>\r\n                <p>\r\n                    The tree was built by extruding the default cube into a tree looking shape, the leaves were then added using a particle system. \r\n                    The position of the leaves was controlled by weight painting the branches of the tree. \r\n                </p>\r\n                <ProjectImage source={'../images/bob_ross/logo.jpg'} description={'Final result'}/>\r\n                <h3>Water</h3>\r\n                <p>\r\n                    We opted to use a shader for the water simulation as this was originally supposed to be a still image. The water was made from scratch using the node system\r\n                    in Blender. The goal was to create as realistic a water effect as possible, it has key features such as correct index of refraction, reflection, and depth using \r\n                    the volume absoption and volume scatter nodes. By adding a noise texture to the water we can make it look more alive and even further realistic as well as\r\n                    adding animation to the water by key-framing the z-component. The image below shows the nodes used and the result in a test environment. \r\n                </p>\r\n                <ProjectImages source1={'../images/bob_ross/water_nodes.png'} description1={'Shader nodes to create water effect.'}\r\n                    source2={'../images/bob_ross/water.png'} description2={'Rendered water in test scene.'}/>\r\n\r\n                <BackButton />\r\n            </div>\r\n        </StyledMain>\r\n\r\n    );\r\n}\r\n\r\nexport default BobRoss;","import React, { useState } from 'react'\r\nimport './App.css';\r\nimport Header from './pages/header';\r\nimport Footer from './pages/footer';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Projects from './pages/projects'\r\nimport Portfolio from './pages/portfolio'\r\nimport About from './pages/about'\r\nimport Home from './pages/home'\r\nimport Error from './pages/error'\r\nimport projects from './db/projectDB.json'\r\nimport styled from 'styled-components'\r\n/*NEW PROJECT: Import project js file */\r\nimport cloth from './projects/cloth_simulation'\r\nimport raid from './projects/table_raid'\r\nimport matkoma from './projects/matkoma'\r\nimport soundflight from './projects/sound_flight'\r\nimport legionen from './projects/legionen'\r\nimport legofinder from './projects/setfinder'\r\nimport proceduralTerrain from './projects/procedural_terrain'\r\nimport proceduralTrees from './projects/procedural_trees'\r\nimport ColorMyWorld from './projects/color_my_world'\r\nimport FaceRecognition from './projects/face_recognition'\r\nimport GlobalIllumination from './projects/global_illumination'\r\nimport BobRoss from './projects/bob_ross';\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* \r\nOlive: #A3BCB6\r\n\r\nGreen Leaf: #39603D\r\n\r\nBrown Grey: #3C403D\r\n\r\nTanly: #DADED4\r\n\r\nWhite: #FFFFFF\r\n*/\r\n\r\nconst StyledMain = styled.div`\r\n  \r\n`\r\n\r\nfunction App() {\r\n  const [selectedCategory, setSelectedCategory] = useState('SHOW ALL');\r\n  const [projectsToShow, setProjectsToShow] = useState(projects);\r\n\r\n\r\n  //filter projects based on category \r\n  const onSelectedCategoryChange = (category) => {\r\n    setSelectedCategory(category);\r\n    const filteredProjects = projects.filter(project => project.categories.includes(category.toLowerCase()));\r\n    category === 'SHOW ALL' ? setProjectsToShow(projects) : setProjectsToShow(filteredProjects);\r\n  }\r\n\r\n  return (\r\n    <StyledMain>\r\n      <Header />\r\n      <Switch>\r\n\r\n        <Route path=\"/portfolio\" component={Portfolio}></Route>\r\n\r\n        {/*NEW PROJECT: Add new projects here, link must match project id */}\r\n        <Route path=\"/projects/cloth_simulation\" component={cloth}></Route>\r\n        <Route path=\"/projects/table_raid\" component={raid}></Route>\r\n        <Route path=\"/projects/matkoma\" component={matkoma}></Route>\r\n        <Route path=\"/projects/soundflight\" component={soundflight}></Route>\r\n        <Route path=\"/projects/legionen\" component={legionen}></Route>\r\n        <Route path=\"/projects/setfinder\" component={legofinder}></Route>\r\n        <Route path=\"/projects/proceduralterrain\" component={proceduralTerrain}></Route>\r\n        <Route path=\"/projects/proceduraltrees\" component={proceduralTrees}></Route>\r\n        <Route path=\"/projects/global_illumination\" component={GlobalIllumination}></Route>\r\n        <Route path=\"/projects/color_my_world\" component={ColorMyWorld}></Route>\r\n        <Route path=\"/projects/facial_recognition\" component={FaceRecognition}></Route>\r\n        <Route path=\"/projects/bobross\" component={BobRoss}></Route>\r\n\r\n\r\n\r\n\r\n\r\n        <Route path=\"/projects\">\r\n          <Projects selectedCat={selectedCategory} onClickFunction={onSelectedCategoryChange} projects={projectsToShow} />\r\n        </Route>\r\n        <Route path=\"/about\" component={About}></Route>\r\n        <Route exact path=\"/\" component={Home}></Route>\r\n        <Route component={Error} />\r\n\r\n      </Switch>\r\n      <Footer />\r\n    </StyledMain>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return null;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport ScrollToTop from './Components/ScrollToTop';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <ScrollToTop />\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}